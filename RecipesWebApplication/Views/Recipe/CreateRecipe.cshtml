@model RecipesWebApplication.Models.CreateRecipeVM

@using (Html.BeginForm("CreateRecipe", "Recipe", FormMethod.Post, new { name = "mainForm", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <h1>Create Recipe</h1>

    <div class="container ">

        @if (TempData["ErrorMSG"] != null)
        {
            <label class="label" style="color:maroon;"> @TempData["ErrorMSG"] </label>
            <br /><br />
        }
        <div class="row">
            <div class="col-lg-6">
                <div class="well">
                    <div class="row">
                        <div class="col-lg-3">
                            <label for="RecipeName">Recipe Name:</label>
                        </div>
                        <div class="col-lg-9">
                            @Html.TextBoxFor(s => s.RecipeName, new { @placeholder = "Recipe Name", @class = "form-control" })
                            @Html.ValidationMessageFor(s => s.RecipeName)
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-3">
                            <label for="RecipeCategories">Category:</label>
                        </div>
                        <div class="col-lg-9">
                            @Html.DropDownListFor(s => s.RecipeCategoryID, Model.RecipeCategories, "Select a Category", new { @class = "form-control" })
                            @Html.ValidationMessageFor(s => s.RecipeCategories)
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-3">
                            <label for="RecipeImage">Upload Image:</label>
                        </div>
                        <div class="col-lg-9">
                            <input class="btn btn-default form-control" type="file" name="RecipeImage" id="RecipeImage" />

                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="well">
                    <div class="row py-2">
                        <div class="col-lg-4">
                            <label for="PrepTime">Prep Time</label>
                        </div>
                        <div class="col-lg-2">
                            <input type="number" class="time form-control" id="pHour" min="0" max="24" /><label class="label label-info">Hours</label>
                        </div>
                        <div class="col-lg-2 col-lg-offset-1">
                            <input type="number" class="time form-control" id="pMinute" min="0" max="59" /><label class="label label-info">Minutes</label>
                        </div>
                        <input type="hidden" name="PrepTime" value="" />
                    </div>
                    <div class="row">
                        <div class="col-lg-4">
                            <label for="CookTime">Cook Time</label>
                        </div>
                        <div class="col-lg-2">
                            <input type="number" class="time form-control" id="cHour" min="0" max="24" /><label class="label label-info">Hours</label>
                        </div>
                        <div class="col-lg-2 col-lg-offset-1">
                            <input type="number" class="time form-control" id="cMinute" min="0" max="59" /><label class="label label-info">Minutes</label>
                        </div>
                        <input type="hidden" name="CookTime" value="" />
                    </div>
                    <div class="row">
                        <div class="col-lg-4">
                            <label for="TotolTime">Total Time</label>
                        </div>
                        <div class="col-lg-2">
                            <input type="number" class="time form-control" id="tHour" min="0" max="24" /><label class="label label-info">Hours</label>
                        </div>
                        <div class="col-lg-2 col-lg-offset-1">
                            <input type="number" class="time form-control" id="tMinute" min="0" max="59" /><label class="label label-info">Minutes</label>
                        </div>
                        <input type="hidden" name="TotalTime" value="" />

                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="well">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Add Recipe Ingredients</th>
                                <th>Amount</th>
                                <th>Type</th>
                                <th class="text-right">
                                    <button type="button" id="myBtn" class="btn btn-secondary" data-toggle="modal" value="add" data-target="#myModal"><span class="oi oi-plus" title="person" aria-hidden="true"></span></button>
                                </th>
                            </tr>
                        </thead>
                        <tbody id="RecipeIngredientList">
                            <tr class="RecipeIngredient" style="display:none">
                                <td>
                                    <input type="hidden" name="IngredientID" class="IngredientInfo" value="" />
                                    <label name="ingredient"></label>
                                </td>
                                <td>
                                    @Html.TextBoxFor(s => s.Amount, new { @placeholder = "0.00", @class = "form-control" })
                                    @Html.ValidationMessageFor(s => s.Amount)
                                </td>

                                <td>
                                    @Html.DropDownListFor(s => s.MeasurmentTypes, Model.MeasurmentTypes, "Select a Measurment", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(s => s.MeasurmentTypes)
                                </td>
                                <td class="text-right"><button type="button" class="deleteIngredient btn btn-danger">Remove</button></td>
                                
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="well">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Add Recipe Instructions</th>
                                <th></th>
                                <th class="text-right">
                                    <button type="button" class="btn btn-secondary" id="addStep"><span class="oi oi-plus" title="person" aria-hidden="true"></span></button>
                                </th>
                            </tr>
                        </thead>
                        <tbody id="RecipeStepList">
                            <tr class="RecipeStep" style="display:none">
                                <td>
                                    @Html.TextAreaFor(s => s.Instruction, new { @placeholder = "Enter a step for making the recipe", @class = "form-control", @rows = "3" })
                                    <input type="hidden" name="stepNumber" value="" />
                                </td>
                                <td></td>
                                <td class="text-right"><button type="button" class="deleteStep btn btn-danger">Remove</button></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <br /><br />


        <div class="container">

        </div>
        <div class="container">

        </div>


        <button class="btn btn-primary" type="submit">Add New Recipe</button>
    </div>
}
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog" role="form">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="modalLabel">Select Ingredient</h2>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Ajax.BeginForm("GetIngredientsByCategory", new AjaxOptions() { UpdateTargetId = "categoryContents", OnBegin = "showLoading", OnSuccess = "hideCategories", OnComplete = "hideLoading", }))
                {
                    <div id="CategorySelection">
                        @foreach (var ic in Model.IngredientCategories)
                        {
                            
                                <button name="category" id="IngredientCategory" value="@ic.IngredientCategoryID" class="btn btn-info marginButton">@ic.IngredientCategory1</button>
                            
                        }
                    </div>
                    <div id="categoryContents"></div>
                    <div id="isLoading" style="display: none">Loading.....</div>
                }
                <button type="button" class="btn btn-primary marginButton" id="showCategories" style="display: none">Back to Categories</button>
            </div>
            <div class="modal-footer">
                <button type="button" id="closeWithOutSaving" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>

        function showLoading() {
            $("#isLoading").show();
        }

        function hideLoading() {
            $("#isLoading").hide();
        }

        function hideCategories() {
            $("#CategorySelection").hide();
            $("#showCategories").show();
            $("input[data-ingredientid]").on("click", function () {
                const str = $(this).val();
                const num = $(this).data("ingredientid");
                cloneForRecipeIngredients(str, num);
            });
        }

        $("#showCategories").on("click", function () {
            $("#CategorySelection").show();
            $("#categoryContents").html("");
            $("#showCategories").hide();
        });

        function cloneForRecipeIngredients(str, num) {
            let newIngredient = $(".RecipeIngredient:first").clone();
            $("#RecipeIngredientList").append(newIngredient);
            $("label", newIngredient).html(str);
            $(".IngredientInfo", newIngredient).val(num);
            newIngredient.show();
            $("#myModal").modal("hide");
        }

        $('#RecipeIngredientList').on("click", ".deleteIngredient", function () {
            $(this).closest('tr').remove();
        });

        $('#RecipeStepList').on("click", ".deleteStep", function () {
            $(this).closest('tr').remove();
            });

        $('[name="mainForm"]').on('submit', function () {
            $('.RecipeIngredient:gt(0)').each(function (idx) {
                $('[name = IngredientID]', this).attr('name', 'RecipeIngredients[' + idx + '].IngredientID');
                $('[name = Amount]', this).attr('name', 'RecipeIngredients[' + idx + '].Amount');
                $('[name = MeasurmentTypes]', this).attr('name', 'RecipeIngredients[' + idx + '].MeasureTypeID');
            });

            $(".RecipeStep:gt(0)").each(function (idx) {
                let num = idx + 1;
                $('[name = stepNumber]', this).val(num);
                $('[name = stepNumber]', this).attr('name', "RecipeSteps[" + idx + "].StepNumber");
                $('[name = Instruction]', this).attr('name', 'RecipeSteps[' + idx + '].Instruction');
            });

            $(".time").each(function () {
                let digits = $(this).val()
                if (digits.length === 0) {
                    digits = "00";
                }
                if (digits.length === 1) {
                    digits = "0" + digits;
                }
                $(this).val(digits)
            });

            $("input[name = PrepTime").val("00:" + $("#pHour").val() + ":" + $("#pMinute").val());
            $("input[name = CookTime").val("00:" + $("#cHour").val() + ":" + $("#cMinute").val());
            $("input[name = TotalTime").val("00:" + $("#tHour").val() + ":" + $("#tMinute").val());

        });

        $("#addStep").on("click", function () {
            let recipeStep = $(".RecipeStep:first").clone();
            $("#RecipeStepList").append(recipeStep);
            recipeStep.show();
        });


    </script>
}


